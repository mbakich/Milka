global
    maxconn 5000
    log stdout daemon notice
    # https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.7&config=intermediate
    # intermediate configuration, tweak to your needs
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-dh-param-file /var/dhparam.pem

defaults
    timeout connect 10s
    timeout client 30s
    timeout server 30s
    timeout tunnel 120s
    log global
    mode http
    option httplog
    option dontlog-normal

resolvers docker_dns
    nameserver dns "127.0.0.11:53"
    resolve_retries 30
    timeout resolve 1s
    timeout retry   1s
    hold other      1s
    hold refused    1s
    hold nx         1s
    hold timeout    1s
    hold valid      1s
    hold obsolete   1s

frontend http-in
    bind :80
    bind :443 ssl crt /var/ssl-certs/public-private-chain.pem ssl-min-ver TLSv1.2 alpn h2,http/1.1
    http-request redirect scheme https unless { ssl_fc }

    #acl serve_cdn path_beg /s3
    #use_backend cdn if serve_cdn

    acl is_post method POST
    use_backend api if is_post
    acl serve_api path_beg /api
    use_backend api if serve_api

    #acl letsencrypt_http_acl path_beg /.well-known/acme-challenge/
    #use_backend letsencrypt_http if letsencrypt_http_acl

    default_backend api

backend api
   mode http
   http-response del-header ^Server:.*
   http-response del-header ^X-Powered-By:.*
   option forwardfor if-none
   http-request add-header X-Real-IP %[src]
   http-request add-header X-Client-IP %[src]
   http-request add-header Http-Client-IP %[src]
   http-request add-header X-Forwarded-Proto https if { ssl_fc }
   log global
   server app-api app-api:80 check resolvers docker_dns resolve-prefer ipv4 rise 10s

# backend cdn
#     mode http
#     http-response del-header ^Server:.*
#     http-response del-header ^X-Powered-By:.*
#     option forwardfor except 127.0.0.1
#     http-request add-header X-Forwarded-Proto https #if { ssl_fc }
#     log global
#     server app-cdn app-cdn:80 check resolvers docker_dns resolve-prefer ipv4 rise 10s

# backend spa
#     mode http
#     http-response del-header ^Server:.*
#     http-response del-header ^X-Powered-By:.*
#     option forwardfor except 127.0.0.1
#     http-request add-header X-Forwarded-Proto https #if { ssl_fc }
#     log global
#     server app-spa app-spa:80 check resolvers docker_dns resolve-prefer ipv4 rise 10s

# backend letsencrypt_http
#  mode http
#  server letsencrypt_http_srv letsencrypt:80  init-addr none resolvers docker_dns resolve-prefer ipv4
