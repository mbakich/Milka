{"version":3,"file":"static/js/8986.2e40cd45.chunk.js","mappings":"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","sources":["hooks/use-column-search-listener.js","selectors/column-width.js","themes/bootstrap-v4/skin/common/dialog.skin.js","themes/bootstrap-v4/skin/columns/columns-modal.skin.js","themes/bootstrap-v4/skin/columns/columns-ordering.skin.js","themes/bootstrap-v4/columns/columns-ordering.jsx","themes/bootstrap-v4/columns/columns-visibility.jsx","themes/bootstrap-v4/skin/datagrid/datagrid-mini.skin.js","themes/bootstrap-v4/datagrid/datagrid-column-width.jsx","themes/bootstrap-v4/common/dialog-header.jsx","themes/bootstrap-v4/columns/columns-modal.jsx","themes/bootstrap-v4/skin/datagrid/body.skin.js","themes/bootstrap-v4/datagrid/datagrid-row.jsx","themes/bootstrap-v4/datagrid/datagrid-body.jsx","themes/bootstrap-v4/skin/datagrid/checkbox.skin.js","themes/bootstrap-v4/datagrid/datagrid-checkbox.jsx","themes/bootstrap-v4/skin/datagrid/footer.skin.js","themes/bootstrap-v4/skin/buttons/buttons.skin.js","themes/bootstrap-v4/buttons/button.jsx","themes/bootstrap-v4/datagrid/datagrid-footer.jsx","themes/bootstrap-v4/skin/datagrid/header.skin.js","themes/bootstrap-v4/datagrid/datagrid-header.jsx","themes/bootstrap-v4/skin/datagrid/title.skin.js","themes/bootstrap-v4/datagrid/datagrid-title.jsx","themes/bootstrap-v4/skin/datagrid/tools.skin.js","themes/bootstrap-v4/skin/buttons/button-dropdown.skin.js","themes/bootstrap-v4/buttons/button-dropdown.jsx","themes/bootstrap-v4/datagrid/datagrid-tools.jsx","themes/bootstrap-v4/skin/datagrid/wrapper.skin.js","themes/bootstrap-v4/datagrid/datagrid-wrapper.jsx","themes/bootstrap-v4/skin/form-dialog/form-dialog.skin.js","themes/bootstrap-v4/datagrid/datagrid-mini-grid.jsx","themes/bootstrap-v4/delete-multiple/delete-multiple-modal.jsx","themes/bootstrap-v4/delete-single/delete-single-modal.jsx","themes/bootstrap-v4/skin/error-dialog/error-dialog.skin.js","themes/bootstrap-v4/error/error-dialog.jsx","themes/bootstrap-v4/skin/filtering/filtering-dialog.skin.js","themes/bootstrap-v4/skin/filtering/filtering.skin.js","themes/bootstrap-v4/filtering/filtering.jsx","themes/bootstrap-v4/filtering/filtering-modal.jsx","themes/bootstrap-v4/form/form.jsx","themes/bootstrap-v4/form/modal.jsx","themes/bootstrap-v4/form/full-page.jsx","themes/bootstrap-v4/form/form-dialog.jsx","themes/bootstrap-v4/buttons/group-buttons.jsx","themes/bootstrap-v4/index.js","utils/column-width.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport {\n  EVENT_SET_QUICK_SEARCH_VALUE,\n  subscribeEvent,\n  unsubscribeEvent,\n} from \"../utils/events\";\n\nconst useColumnSearchListener = (columnSearch, forceSearch, publishEvents) => {\n  useEffect(() => {\n    const handleCustomEvent = ({ detail: { columnName, searchValue } }) => {\n      columnSearch({\n        columnName,\n        searchValue,\n      });\n      forceSearch();\n    };\n\n    if (publishEvents) {\n      subscribeEvent(EVENT_SET_QUICK_SEARCH_VALUE, handleCustomEvent);\n    }\n\n    // Clean up event listener on component unmount\n    return () => {\n      if (publishEvents) {\n        unsubscribeEvent(EVENT_SET_QUICK_SEARCH_VALUE, handleCustomEvent);\n      }\n    };\n  }, [columnSearch, forceSearch, publishEvents]);\n};\n\nexport default useColumnSearchListener;\n","export const selectColumnWidth = (state) => state.columnWidth;\n","const dialogSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  dialog: {\n    composes: \"modal\",\n  },\n  \"dialog-open\": {\n    \".modal&\": {\n      display: \"block\",\n      opacity: \"0\",\n      animation: \"$fadeIn 0.15s ease 0s normal forwards 1\",\n    },\n  },\n  \"dialog-closed\": {\n    \".modal&\": {\n      display: \"none\",\n      opacity: \"0\",\n      animation: \"none\",\n    },\n  },\n  \"dialog-header\": {\n    composes: \"modal-header\",\n  },\n  \"dialog-title\": {\n    composes: \"modal-title\",\n  },\n  \"dialog-close-button\": {\n    composes: \"close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n};\n\nexport default dialogSkin;\n","import dialogSkin from \"../common/dialog.skin\";\n\nconst columnsModalSkin = {\n  ...dialogSkin,\n  \"horizontal-line\": {\n    \"border-top\": \"1px solid var(--gc-border-separator-color)\",\n    \"margin-top\": \"3px\",\n    \"margin-bottom\": \"3px\",\n  },\n  tabs: {\n    composes: \"nav nav-tabs\",\n    \".nav-tabs&\": {\n      \"margin-bottom\": \"10px\",\n      \"list-style\": \"none\",\n      \"padding-inline-start\": \"unset\",\n    },\n  },\n  \"tab-button\": {\n    composes: \"nav-link\",\n    \".nav-link&\": {\n      cursor: \"pointer\",\n    },\n  },\n};\n\nexport default columnsModalSkin;\n","const orderingBox = {\n  position: \"relative\",\n  padding: \"16px\",\n  \"margin-bottom\": \"5px\",\n  background: \"var(--gc-light-background)\",\n  color: \"var(--gc-default-text-color)\",\n  border: \"1px solid var(--gc-border-separator-color)\",\n  \"border-radius\": \"4px\",\n};\n\nconst columnsOrderingSkin = {\n  \"ordering-box\": {\n    ...orderingBox,\n  },\n  \"ordering-box-disabled\": {\n    ...orderingBox,\n    opacity: 0.5,\n  },\n  \"horizontal-line\": {\n    \"border-top\": \"1px solid var(--gc-border-separator-color)\",\n    \"margin-top\": \"5px\",\n    \"margin-bottom\": \"5px\",\n  },\n  \"droppable-area\": {\n    background: \"var(--gc-light-background)\",\n    padding: \"4px\",\n  },\n  \"is-dragging-over\": {\n    background: \"var(--gc-dark-background)\",\n    padding: \"4px\",\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n  },\n};\n\nexport default columnsOrderingSkin;\n","import { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport columnsOrderingSkin from \"../skin/columns/columns-ordering.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst selectOrderedColumns = (state) => state.datagrid.orderedColumns;\n\nconst useStyles = createUseStyles(columnsOrderingSkin);\n\nconst ColumnsOrdering = ({\n  columns,\n  visibleColumns,\n  changeOrdering,\n  resetColumnsOrdering,\n}) => {\n  const classes = useStyles();\n  const orderedColumns = useSelector(selectOrderedColumns);\n\n  return (\n    <>\n      <div className={classes[\"description\"]}>\n        <div>{i18n.t(\"ordering_drag_column\")}</div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark\"\n            onClick={() => resetColumnsOrdering(columns)}\n          >\n            {i18n.t(\"reset_ordering\")}\n          </button>\n        </div>\n      </div>\n      <div className={classes[\"horizontal-line\"]}></div>\n      <DragDropContext\n        onDragEnd={({ source, destination, draggableId }) => {\n          if (source && destination && source.index !== destination.index) {\n            changeOrdering(draggableId, source.index, destination.index);\n          }\n        }}\n      >\n        <Droppable droppableId=\"columns\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={\n                snapshot.isDraggingOver\n                  ? classes[\"is-dragging-over\"]\n                  : classes[\"droppable-area\"]\n              }\n            >\n              {orderedColumns\n                .map((columnName) =>\n                  columns.find((column) => column.name === columnName)\n                )\n                .map((column, columnIndex) => (\n                  <Draggable\n                    draggableId={column.name}\n                    index={columnIndex}\n                    key={column.name}\n                  >\n                    {(provided) => (\n                      <div\n                        key={column.name}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className={\n                          visibleColumns.includes(column.name)\n                            ? classes[\"ordering-box\"]\n                            : classes[\"ordering-box-disabled\"]\n                        }\n                      >\n                        {column.displayAs}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default ColumnsOrdering;\n","import PropTypes from \"prop-types\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { FIELD_TYPES } from \"../../../constants/field-types\";\n\nconst ColumnsVisibility = ({\n  columns,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n  classes,\n}) => {\n  return (\n    <>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={() => selectColumnsAllOrNone(columns)}\n            checked={visibleColumns.length === columns.length}\n          />\n          &nbsp;&nbsp;{i18n.t(\"select_all\")}\n        </label>\n      </div>\n      <div className={classes[\"horizontal-line\"]}></div>\n      {columns\n        .filter((c) => c.dataType !== FIELD_TYPES.INVISIBLE)\n        .map((column) => (\n          <div key={column.name}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={visibleColumns.includes(column.name)}\n                onChange={() => toggleVisibleColumn(column.name, columns)}\n              />\n              &nbsp;&nbsp;\n              {column.displayAs}\n            </label>\n          </div>\n        ))}\n    </>\n  );\n};\n\nColumnsVisibility.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default ColumnsVisibility;\n","import { COLUMN_MIN_WIDTH } from \"../../../../utils/column-width\";\n\nconst widthChanging = {\n  display: \"block\",\n  position: \"absolute\",\n  right: \"-13px\",\n  height: \"39px\",\n  width: \"10px\",\n  cursor: \"col-resize\",\n  opacity: \"0.8\",\n  \"z-index\": \"10\",\n  \"&:hover\": {\n    background: \"var(--gc-emphasis-background-color)\",\n    cursor: \"col-resize\",\n  },\n  \"&:focus, &:active\": {\n    background: \"transparent\",\n    cursor: \"col-resize\",\n  },\n};\n\nconst miniGridSkin = {\n  \"mini-grid\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"interactive-grid\": {\n    composes: \"table table-bordered\",\n  },\n  \"interactive-grid-full-width\": {\n    width: \"100%\",\n  },\n  \"interactive-grid-auto-width\": {\n    width: \"auto\",\n  },\n  \"scrolling-wrapper\": {\n    composes: \"gc-mini-grid-scrolling-wrapper\",\n    width: \"100%\",\n    position: \"relative\",\n    \"overflow-x\": \"auto\",\n  },\n  \"column-text\": {\n    \"&>div\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"mini-grid-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n    \"margin-bottom\": \"10px\",\n  },\n  \"width-changing\": {\n    ...widthChanging,\n  },\n  \"width-changing-last\": {\n    ...widthChanging,\n    right: \"-8px\",\n  },\n  \"header-column\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n    \"min-width\": COLUMN_MIN_WIDTH + \"px\",\n    \"white-space\": \"nowrap\",\n    \"padding-right\": \"10px\",\n  },\n};\n\nexport default miniGridSkin;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport PropTypes from \"prop-types\";\nimport { FIELD_TYPES } from \"../../../constants/field-types\";\nimport {\n  columnChangeWidthAction,\n  columnWidthOnDrag,\n  columnWidthOnDragEnd,\n  columnWidthOnDragStart,\n} from \"../../../utils/column-width\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnWidthActions } from \"../../../actions/column-width-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport classNames from \"classnames\";\n\nconst useStyles = createUseStyles(miniGridSkin);\nconst selectColumnWidth = (state) => state.columnWidth;\n\nconst DatagridColumnWidth = ({ visibleColumns }) => {\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const hasColumnsWithCustomWidth = Object.keys(columnWidth).length > 0;\n\n  return (\n    <>\n      <div className={classes[\"description\"]}>\n        <div>{i18n.t(\"column_width_drag\")}&nbsp;</div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark\"\n            onClick={() =>\n              dispatch({\n                type: columnWidthActions.RESET_COLUMN_WIDTH,\n              })\n            }\n          >\n            {i18n.t(\"reset_column_width\")}\n          </button>\n        </div>\n      </div>\n      <div className={classes[\"scrolling-wrapper\"]}>\n        <table\n          className={classNames({\n            [classes[\"interactive-grid\"]]: true,\n            [classes[\"interactive-grid-auto-width\"]]: hasColumnsWithCustomWidth,\n            [classes[\"interactive-grid-full-width\"]]:\n              !hasColumnsWithCustomWidth,\n          })}\n        >\n          <thead>\n            <tr>\n              {visibleColumns.map((column, numRow) =>\n                column.dataType === FIELD_TYPES.INVISIBLE ? null : (\n                  <th key={column.name}>\n                    <div\n                      className={classes[\"header-column\"]}\n                      style={{\n                        width: columnWidth[column.name],\n                      }}\n                    >\n                      <div\n                        className={\n                          visibleColumns[numRow + 1]\n                            ? classes[\"width-changing\"]\n                            : classes[\"width-changing-last\"]\n                        }\n                        style={{\n                          display: \"none\",\n                        }}\n                      ></div>\n                      <div\n                        className={\n                          visibleColumns[numRow + 1]\n                            ? classes[\"width-changing\"]\n                            : classes[\"width-changing-last\"]\n                        }\n                        draggable={true}\n                        onDragStart={columnWidthOnDragStart}\n                        onDrag={columnWidthOnDrag}\n                        onDragEnd={(event) =>\n                          columnWidthOnDragEnd(event, column.name, dispatch)\n                        }\n                      ></div>\n                      <span>{column.displayAs}</span>\n                    </div>\n                  </th>\n                )\n              )}\n            </tr>\n          </thead>\n        </table>\n      </div>\n      <div>\n        <br />\n        <p>{i18n.t(\"column_width_set_width_manually\")}</p>\n      </div>\n      <div>\n        {visibleColumns.map((column) => {\n          const columnWidthValue = columnWidth[column.name]\n            ? columnWidth[column.name].replace(\"px\", \"\")\n            : \"\";\n\n          return (\n            <div className=\"mb-3 row\" key={column.name}>\n              <label\n                className=\"col-sm-2 col-form-label\"\n                htmlFor={`gc-column-width-${column.name}`}\n              >\n                {column.displayAs}\n              </label>\n              <div className=\"col-sm-2\">\n                <input\n                  type=\"number\"\n                  value={columnWidthValue}\n                  name={`gc-column-width-${column.name}`}\n                  id={`gc-column-width-${column.name}`}\n                  className=\"form-control\"\n                  onChange={(event) =>\n                    columnChangeWidthAction(\n                      column.name,\n                      event.target.value,\n                      dispatch\n                    )\n                  }\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nDatagridColumnWidth.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridColumnWidth;\n","import PropTypes from \"prop-types\";\nimport { createUseStyles } from \"react-jss\";\n\nimport dialogSkin from \"../skin/common/dialog.skin\";\n\nconst useStyles = createUseStyles(dialogSkin);\n\nconst DialogHeader = ({ title, onClose }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes[\"dialog-header\"]}>\n      <h5 className={classes[\"dialog-title\"]}>{title}</h5>\n      <button\n        type=\"button\"\n        className={classes[\"dialog-close-button\"]}\n        aria-label=\"Close\"\n        onClick={onClose}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n};\n\nDialogHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default DialogHeader;\n","import { createUseStyles } from \"react-jss\";\nimport classNames from \"classnames\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport columnsModalSkin from \"../skin/columns/columns-modal.skin\";\nimport ColumnsOrdering from \"./columns-ordering\";\nimport ColumnsVisibility from \"./columns-visibility\";\nimport { useState } from \"react\";\nimport DatagridColumnWidth from \"../datagrid/datagrid-column-width\";\nimport DialogHeader from \"../common/dialog-header\";\n\nconst useStyles = createUseStyles(columnsModalSkin);\n\nconst TAB_VISIBILITY = \"tab-visibility\";\nconst TAB_ORDERING = \"tab-ordering\";\nconst TAB_WIDTH = \"tab-width\";\n\nconst ColumnsModal = ({\n  columns,\n  columnsModalOpen,\n  onColumnsModalClose,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n  visibleColumnsWithDetails,\n  changeOrdering,\n  resetColumnsOrdering,\n}) => {\n  const [tabSelected, setTabSelection] = useState(TAB_VISIBILITY);\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classNames({\n        [classes[\"dialog\"]]: true,\n        [classes[\"dialog-open\"]]: columnsModalOpen,\n        [classes[\"dialog-closed\"]]: !columnsModalOpen,\n      })}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n    >\n      <div\n        className={classNames(\"modal-dialog\", {\n          \"modal-l\": tabSelected !== TAB_WIDTH,\n          \"w-100 mw-100\": tabSelected === TAB_WIDTH,\n        })}\n        role=\"document\"\n      >\n        <div className=\"modal-content\">\n          <DialogHeader\n            onClose={onColumnsModalClose}\n            title={i18n.t(\"columns\")}\n          />\n          <div className=\"modal-body\">\n            {columnsModalOpen && (\n              <>\n                <ul className={classes[\"tabs\"]}>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_VISIBILITY,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_VISIBILITY);\n                      }}\n                    >\n                      {i18n.t(\"tab_visibility\")}\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_ORDERING,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_ORDERING);\n                      }}\n                    >\n                      {i18n.t(\"tab_ordering\")}\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_WIDTH,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_WIDTH);\n                      }}\n                    >\n                      {i18n.t(\"tab_width\")}\n                    </button>\n                  </li>\n                </ul>\n                {tabSelected === TAB_VISIBILITY && (\n                  <ColumnsVisibility\n                    columns={columns}\n                    selectColumnsAllOrNone={selectColumnsAllOrNone}\n                    toggleVisibleColumn={toggleVisibleColumn}\n                    visibleColumns={visibleColumns}\n                    classes={classes}\n                  />\n                )}\n                {tabSelected === TAB_ORDERING && (\n                  <ColumnsOrdering\n                    columns={columns}\n                    toggleVisibleColumn={toggleVisibleColumn}\n                    visibleColumns={visibleColumns}\n                    changeOrdering={changeOrdering}\n                    resetColumnsOrdering={resetColumnsOrdering}\n                  />\n                )}\n                {tabSelected === TAB_WIDTH && (\n                  <DatagridColumnWidth\n                    visibleColumns={visibleColumnsWithDetails}\n                  />\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnsModal;\n","const bodySkin = {\n  \"@keyframes flash\": {\n    \"0%\": { opacity: \"1\" },\n    \"25%\": { opacity: \"0\" },\n    \"50%\": { opacity: \"1\" },\n    \"75%\": { opacity: \"0\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"animation-flash\": {\n    animation: \"$flash 1s ease 0s normal forwards 1\",\n    position: \"relative\",\n    \"z-index\": \"1\",\n  },\n  \"column-text\": {\n    \"&>div\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"column-action\": {\n    \"white-space\": \"nowrap\",\n    \"border-left\": \"none\",\n  },\n  \"table-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  \"open-row\": {\n    cursor: \"pointer\",\n    padding: \"0 5px\",\n    \"min-width\": \"28px\",\n  },\n};\n\nexport default bodySkin;\n","import { useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ActionsColumn from \"../../../components/datagrid/body/actions-column\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport { masterDetailActions } from \"../../../actions/master-detail-actions\";\nimport MasterDetail from \"../../../components/common/master-detail\";\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\nconst selectHasMasterDetail = (state) => state.configuration.hasMasterDetail;\nconst selectColumnWidth = (state) => state.columnWidth;\nconst selectOpenedRows = (state) => state.masterDetail.openedRows;\n\nconst useStyles = createUseStyles(bodySkin);\n\nconst DatagridRow = ({\n  lastPrimaryKeyValue,\n  rowData,\n  hasActions,\n  visibleColumns,\n  settings,\n  configurationSettings: { onRowUpdate, onRowUnmount, actionButtonsMultiple },\n  rightSideActions,\n  skin,\n  theme,\n  publishEvents,\n  ...rest\n}) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n  const hasMasterDetail = useSelector(selectHasMasterDetail);\n  const openedRows = useSelector(selectOpenedRows);\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  const {\n    grocery_crud_extras: { primaryKeyValue },\n  } = rowData;\n\n  useLayoutEffect(() => {\n    if (onRowUpdate) {\n      onRowUpdate({ primaryKeyValue });\n    }\n\n    return () => {\n      if (onRowUnmount) {\n        onRowUnmount({ primaryKeyValue });\n      }\n    };\n  }, [primaryKeyValue, rowData, onRowUpdate, onRowUnmount]);\n\n  const ActionsTd = () => (\n    <td key=\"column__action\" className={classes[\"column-action\"]}>\n      <ActionsColumn\n        {...rest}\n        actionButtonsMultiple={actionButtonsMultiple}\n        backendActionButtons={rowData.grocery_crud_extras.actionButtons}\n        actionButtons={settings.actionButtons}\n        primaryKeyValue={primaryKeyValue}\n      />\n    </td>\n  );\n\n  const isRowOpened =\n    hasMasterDetail && openedRows.find((rowId) => rowId === primaryKeyValue);\n\n  return (\n    <>\n      <tr\n        className={\n          lastPrimaryKeyValue &&\n          lastPrimaryKeyValue === rowData.grocery_crud_extras.primaryKeyValue\n            ? classes[\"animation-flash\"]\n            : undefined\n        }\n      >\n        {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n          <ActionsTd />\n        )}\n        {visibleColumns.map((column, numRow) => (\n          <td key={column.name}>\n            <div\n              className={classes[\"column-text\"]}\n              style={{\n                width: columnWidth[column.name],\n              }}\n            >\n              {hasMasterDetail && numRow === 0 && (\n                <>\n                  <span\n                    className={classes[\"open-row\"]}\n                    onClick={() =>\n                      dispatch({\n                        type: isRowOpened\n                          ? masterDetailActions.CLOSE_ROW\n                          : masterDetailActions.OPEN_ROW,\n                        rowId: primaryKeyValue,\n                      })\n                    }\n                  >\n                    <Icon icon={isRowOpened ? \"caret-down\" : \"caret-right\"} />\n                  </span>\n                </>\n              )}\n              {formatDatagridValue(rowData[column.name], column.dataType, {\n                dateFormat,\n                fieldName: column.name,\n                fieldOptions: column.options,\n                locale,\n                permittedValues: column.permittedValues,\n                primaryKeyValue,\n              })}\n            </div>\n          </td>\n        ))}\n        {hasActions && rightSideActions && visibleColumns.length > 0 && (\n          <ActionsTd />\n        )}\n      </tr>\n      {isRowOpened && (\n        <tr>\n          <td colSpan={visibleColumns.length + (hasActions ? 1 : 0)}>\n            <MasterDetail\n              primaryKeyValue={primaryKeyValue}\n              skin={skin}\n              theme={theme}\n              publishEvents={publishEvents}\n            />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nDatagridRow.propTypes = {\n  settings: PropTypes.object,\n  configurationSettings: PropTypes.object,\n};\n\nDatagridRow.defaultProps = {\n  settings: {},\n  configurationSettings: {},\n};\n\nexport default DatagridRow;\n","import PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport DatagridRow from \"./datagrid-row\";\n\nconst useStyles = createUseStyles(bodySkin);\n\nconst selectRows = (state) => state.datagridRows;\nconst selectRightSideActions = (state) => state.configuration.rightSideActions;\n\nconst DatagridBody = (props) => {\n  const rows = useSelector(selectRows);\n  const rightSideActions = useSelector(selectRightSideActions);\n\n  const classes = useStyles();\n\n  return (\n    <tbody className={classes[\"table-body\"]}>\n      {rows.map((rowData, numRow) => (\n        <DatagridRow\n          key={numRow}\n          rowData={rowData}\n          rightSideActions={rightSideActions}\n          {...props}\n        />\n      ))}\n    </tbody>\n  );\n};\n\nDatagridBody.propTypes = {\n  rows: PropTypes.array,\n};\n\nexport default DatagridBody;\n","const checkboxSkin = {\n  checkbox: {\n    \"margin-right\": \"10px\",\n    display: \"inline-flex\",\n  },\n};\n\nexport default checkboxSkin;\n","import { createUseStyles } from \"react-jss\";\nimport checkboxSkin from \"../skin/datagrid/checkbox.skin\";\n\nconst useStyles = createUseStyles(checkboxSkin);\n\nconst DatagridCheckbox = ({ onChange, checked }) => {\n  const classes = useStyles();\n\n  return (\n    <input\n      type=\"checkbox\"\n      className={classes[\"checkbox\"]}\n      onChange={onChange}\n      checked={checked}\n    />\n  );\n};\n\nexport default DatagridCheckbox;\n","const footerSkin = {\n  footer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"16px 5px\",\n    \"@media (max-width: 768px)\": {\n      \"flex-direction\": \"column\",\n    },\n  },\n  \"footer-bottom-border\": {\n    \"border-color\": \"var(--gc-border-separator-color)\",\n    \"border-width\": \"1px\",\n    \"border-style\": \"none none solid none\",\n    width: \"100%\",\n    height: \"1px\",\n  },\n  \"footer-error\": {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    padding: \"16px 5px\",\n    \"border-color\": \"var(--gc-border-separator-color)\",\n    \"border-width\": \"1px\",\n    \"border-style\": \"none none solid none\",\n  },\n  \"footer-child\": {\n    display: \"flex\",\n    \"& > div\": {\n      display: \"flex\",\n      \"flex-direction\": \"row\",\n      \"align-items\": \"center\",\n      padding: \"5px\",\n      \"justify-content\": \"end\",\n    },\n    \"& > div > div\": {\n      paddingRight: \"5px\",\n    },\n  },\n  \"footer-child-mobile\": {\n    \"flex-direction\": \"column\",\n  },\n  pagination: {\n    composes: \"pagination\",\n    \".pagination&\": {\n      margin: \"0\",\n      \"list-style\": \"none\",\n    },\n  },\n  \"page-link\": {\n    composes: \"page-link\",\n    \".page-link&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"page-number\": {\n    composes: \"form-control\",\n    \"&.form-control\": {\n      borderRadius: \"0\",\n      width: \"100px\",\n      borderLeft: \"none\",\n      borderRight: \"none\",\n    },\n  },\n  \"per-page-dropdown\": {\n    composes: \"form-control\",\n    \"min-width\": \"70px\",\n  },\n};\n\nexport default footerSkin;\n","const buttonsSkin = {\n  \"simple-button\": {\n    composes: \"btn btn-outline-dark\",\n    \"margin-left\": \"5px\",\n  },\n  \"bottom-space\": {\n    \"margin-bottom\": \"5px\",\n  },\n};\n\nexport default buttonsSkin;\n","import Icon from \"../../../components/common/icon\";\nimport buttonsSkin from \"../skin/buttons/buttons.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport classNames from \"classnames\";\n\nconst useStyles = createUseStyles(buttonsSkin);\n\nconst Button = ({\n  onClick,\n  icon,\n  label,\n  link = false,\n  href,\n  newTab = false,\n  bottomSpace,\n}) => {\n  const classes = useStyles();\n\n  if (link) {\n    return (\n      <a\n        className={classNames({\n          [classes[\"simple-button\"]]: true,\n          [classes[\"bottom-space\"]]: bottomSpace,\n        })}\n        onClick={onClick}\n        href={href}\n        title={label}\n        target={newTab ? \"_blank\" : undefined}\n        rel=\"noreferrer\"\n      >\n        {icon && (\n          <>\n            <Icon icon={icon}></Icon>&nbsp;\n          </>\n        )}\n        {label}\n      </a>\n    );\n  }\n\n  return (\n    <button\n      className={classNames({\n        [classes[\"simple-button\"]]: true,\n        [classes[\"bottom-space\"]]: bottomSpace,\n      })}\n      onClick={onClick}\n      title={label}\n    >\n      {icon && (\n        <>\n          <Icon icon={icon}></Icon>&nbsp;\n        </>\n      )}\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import { createUseStyles } from \"react-jss\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport Icon from \"../../../components/common/icon\";\nimport DatagridPagingItemsLabel from \"../../../components/datagrid/footer/datagrid-paging-items-label\";\nimport footerSkin from \"../skin/datagrid/footer.skin\";\nimport MultipleButtons from \"../../../components/datagrid/button/MultipleButtons\";\nimport Button from \"../buttons/button\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(footerSkin);\n\nconst DatagridFooter = (props) => {\n  const classes = useStyles();\n\n  const {\n    filteredTotalEntries,\n    forceSearch,\n    goToFirstPage,\n    goToLastPage,\n    goToNextPage,\n    goToPreviousPage,\n    initError,\n    isMobileDevice,\n    lastPage,\n    onClearAllCache,\n    page: currentPage,\n    pageChange,\n    pagingOptions,\n    perPage,\n    perPageChange,\n    totalEntries,\n  } = props;\n\n  const hasBottomLeftButtons = useSelector(\n    (state) => state.configuration.hasBottomLeftButtons\n  );\n  const hasBottomRightButtons = useSelector(\n    (state) => state.configuration.hasBottomRightButtons\n  );\n\n  const datagridButtonsBottomLeft = useSelector(\n    (state) => state.configuration.datagridButtonsBottomLeft\n  );\n\n  const datagridButtonsBottomRight = useSelector(\n    (state) => state.configuration.datagridButtonsBottomRight\n  );\n\n  const hasBottomButtons = hasBottomLeftButtons || hasBottomRightButtons;\n\n  const footerChildClasses = classNames({\n    [classes[\"footer-child\"]]: true,\n    [classes[\"footer-child-mobile\"]]: isMobileDevice,\n  });\n\n  const [i18nShow, i18nEntries] = i18n.smartSeparation(\n    i18n.t(\"paging_show_entries\"),\n    2\n  );\n\n  if (initError) {\n    return (\n      <div className={classes[\"footer-error\"]}>\n        <p>\n          Couldn&apos;t load initial data sorry 😞 . This message usually\n          appears when the server is down or there is an error in the code! If\n          the issue still persist, consider clearing the cache.\n        </p>\n        <p>\n          <button className=\"btn btn-outline-dark\" onClick={onClearAllCache}>\n            Clear Cache\n          </button>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className={classes.footer}>\n        <div className={footerChildClasses}>\n          {pagingOptions.length > 0 && (\n            <div>\n              <div>{i18nShow}</div>\n              <div>\n                <select\n                  className={classes[\"per-page-dropdown\"]}\n                  onChange={perPageChange}\n                  value={perPage}\n                >\n                  {pagingOptions.map((pageOption) => (\n                    <option key={pageOption} value={pageOption}>\n                      {pageOption}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div>{i18nEntries}</div>\n            </div>\n          )}\n        </div>\n        <div className={footerChildClasses}>\n          {filteredTotalEntries ? (\n            <div>\n              <DatagridPagingItemsLabel\n                currentPage={currentPage}\n                totalEntries={totalEntries}\n                perPage={perPage}\n                filteredTotalEntries={filteredTotalEntries}\n              />\n            </div>\n          ) : null}\n          <div>\n            <ul className={classes.pagination}>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === 1,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToFirstPage(currentPage, lastPage)}\n                  aria-label=\"Go to first page\"\n                >\n                  <Icon icon=\"step-backward\" />\n                </button>\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === 1,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToPreviousPage(currentPage, lastPage)}\n                  aria-label=\"Go to previous page\"\n                >\n                  <Icon icon=\"chevron-left\" />\n                </button>\n              </li>\n              <li className=\"page-item\">\n                <input\n                  type=\"number\"\n                  className={classes[\"page-number\"]}\n                  value={currentPage}\n                  onChange={(event) => pageChange(event, currentPage, lastPage)}\n                  onFocus={(event) => event.target.select()}\n                  disabled={filteredTotalEntries === 0}\n                  aria-label=\"Enter page number\"\n                  onKeyUp={(event) => {\n                    if (event.key === \"Enter\") {\n                      forceSearch();\n                    }\n                  }}\n                />\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === lastPage,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToNextPage(currentPage, lastPage)}\n                  aria-label=\"Go to next page\"\n                >\n                  <Icon icon=\"chevron-right\" />\n                </button>\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === lastPage,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToLastPage(currentPage, lastPage)}\n                  aria-label=\"Go to last page\"\n                >\n                  <Icon icon=\"step-forward\" />\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      {hasBottomButtons && (\n        <div className={classes.footer}>\n          <div className={footerChildClasses}>\n            <MultipleButtons\n              Button={Button}\n              buttons={datagridButtonsBottomLeft}\n            />\n          </div>\n          <div className={footerChildClasses}>\n            <MultipleButtons\n              Button={Button}\n              buttons={datagridButtonsBottomRight}\n            />\n          </div>\n        </div>\n      )}\n      <div className={classes[\"footer-bottom-border\"]}></div>\n    </>\n  );\n};\n\nDatagridFooter.propTypes = {\n  page: PropTypes.number,\n};\n\nexport default DatagridFooter;\n","const headerSkin = {\n  \"search-column\": {\n    \"min-width\": \"30px\",\n    \"vertical-align\": \"middle\",\n  },\n  \"multiple-action-button\": {\n    composes: \"btn btn-default btn-outline-dark\",\n    display: \"inline-flex\",\n    \"margin-right\": \"5px\",\n    \"vertical-align\": \"middle\",\n    \"align-items\": \"center\",\n  },\n  \"table-th-with-ordering\": {\n    cursor: \"pointer\",\n  },\n  \"actions-column-header\": {\n    \"align-items\": \"center\",\n    display: \"flex\",\n    height: \"39px\",\n  },\n  \"with-ordering\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n  },\n\n  \"input-text\": {\n    composes: \"form-control\",\n  },\n  \"input-select\": {\n    composes: \"form-control form-select\",\n  },\n  \"input-select-search\": {\n    \"min-width\": \"80px\",\n  },\n  \"column-action\": {\n    \"white-space\": \"nowrap\",\n    \"border-left\": \"none\",\n  },\n};\n\nexport default headerSkin;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\n\nimport i18n from \"../../../utils/locale/i18n\";\nimport headerSkin from \"../skin/datagrid/header.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getSearchInputComponent,\n  requireForceSearchOnChange,\n} from \"../../../utils/field-types\";\nimport { getClassNamesByDataType } from \"../../../utils/datagrid\";\nimport DatagridCheckbox from \"./datagrid-checkbox\";\nimport { getMultipleActionUrl } from \"../../../utils/urls\";\nimport useColumnSearchListener from \"../../../hooks/use-column-search-listener\";\n\nconst useStyles = createUseStyles(headerSkin);\nconst selectRightSideActions = (state) => state.configuration.rightSideActions;\nconst selectColumnWidth = (state) => state.columnWidth;\n\nconst DatagridHeader = (props) => {\n  const {\n    backendActionButtonsMultiple,\n    columnOrdering,\n    columnSearch,\n    columnSearchValues = {},\n    columnSearchValuesDisplayAs = {},\n    configurationSettings: { actionButtonsMultiple = [] } = {},\n    extendedSearchData = [],\n    forceSearch,\n    hasActions = false,\n    loadCssThirdParty,\n    onMultipleDeleteModalOpen,\n    onSelectRowAllOrNone,\n    options: {\n      actionButtonHasText = true,\n      hasActionButtonsMultiple = false,\n      deleteMultiple = false,\n    } = {},\n    publishEvents,\n    selectRowsAllOrNoneChecked,\n    selectedIds = [],\n    sorting,\n    sortingFor,\n    visibleColumns = [],\n  } = props;\n\n  const classes = useStyles(props);\n\n  useColumnSearchListener(columnSearch, forceSearch, publishEvents);\n\n  const rightSideActions = useSelector(selectRightSideActions);\n\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const hasQuickSearch = extendedSearchData.length === 0;\n\n  const isAnyColumnSearchable = visibleColumns.some(\n    (column) => column.isSearchable\n  );\n\n  const hasFrontendActionButtonsMultiple = actionButtonsMultiple.length > 0;\n\n  const hasMultipleActions =\n    deleteMultiple ||\n    hasActionButtonsMultiple ||\n    hasFrontendActionButtonsMultiple;\n  const hasSecondaryHeader = isAnyColumnSearchable || hasMultipleActions;\n\n  const ActionsTd = () => (\n    <td className={classes[\"column-action\"]}>\n      <div className={classes[\"actions-column-header\"]}>\n        {hasMultipleActions && (\n          <>\n            <DatagridCheckbox\n              onChange={onSelectRowAllOrNone}\n              checked={selectRowsAllOrNoneChecked}\n            />\n            {selectedIds.length > 0 && (\n              <>\n                {deleteMultiple && (\n                  <button\n                    type=\"button\"\n                    className={classes[\"multiple-action-button\"]}\n                    onClick={onMultipleDeleteModalOpen}\n                  >\n                    <Icon icon=\"trash\" />\n                    &nbsp;&nbsp;\n                    {actionButtonHasText && (\n                      <span>{i18n.t(\"action_delete\")}</span>\n                    )}\n                  </button>\n                )}\n                {hasActionButtonsMultiple &&\n                  backendActionButtonsMultiple.map((button, key) => (\n                    <a\n                      key={key}\n                      className={classes[\"multiple-action-button\"]}\n                      href={getMultipleActionUrl({ button, selectedIds })}\n                      target={button.newTab ? \"_blank\" : undefined}\n                      rel=\"noreferrer\"\n                    >\n                      <Icon icon={button.iconName} />\n                      &nbsp;&nbsp;\n                      <span>{button.label}</span>\n                    </a>\n                  ))}\n                {hasFrontendActionButtonsMultiple &&\n                  actionButtonsMultiple.map((button, key) => (\n                    <button\n                      key={key}\n                      className={classes[\"multiple-action-button\"]}\n                      onClick={() => {\n                        if (button.onClick) {\n                          button.onClick({ selectedIds });\n                        }\n                      }}\n                    >\n                      <Icon icon={button.iconName} />\n                      &nbsp;&nbsp;\n                      <span>{button.label}</span>\n                    </button>\n                  ))}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </td>\n  );\n\n  return (\n    <thead>\n      <tr>\n        {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n          <th className={classes[\"column-action\"]}>{i18n.t(\"actions\")}</th>\n        )}\n        {visibleColumns.map((column) => (\n          <th\n            className={\n              column.hasOrdering ? classes[\"table-th-with-ordering\"] : undefined\n            }\n            key={column.name}\n            onClick={() => {\n              if (column.hasOrdering) {\n                columnOrdering({\n                  columnName: column.name,\n                  sorting:\n                    sorting === \"\" || sorting === \"desc\" ? \"asc\" : \"desc\",\n                });\n              }\n            }}\n          >\n            <div className={classes[\"with-ordering\"]}>\n              <span>{column.displayAs}</span>\n              {column.hasOrdering && (\n                <>\n                  {sortingFor === column.name ? (\n                    <Icon\n                      icon={\n                        sorting === \"asc\"\n                          ? \"sort-amount-down-alt\"\n                          : \"sort-amount-down\"\n                      }\n                    />\n                  ) : (\n                    <Icon icon=\"sort\" />\n                  )}\n                </>\n              )}\n            </div>\n          </th>\n        ))}\n        {hasActions && rightSideActions && visibleColumns.length > 0 && (\n          <th>{i18n.t(\"actions\")}</th>\n        )}\n      </tr>\n      {hasSecondaryHeader && (\n        <tr>\n          {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n            <ActionsTd />\n          )}\n          {visibleColumns.map((column) => {\n            const InputSearchComponent = getSearchInputComponent(\n              column.search.dataType\n            );\n\n            return (\n              <td key={column.name} className={classes[\"search-column\"]}>\n                {hasQuickSearch && column.isSearchable && (\n                  <InputSearchComponent\n                    className={\n                      classes[getClassNamesByDataType(column.search.dataType)]\n                    }\n                    style={{\n                      width: columnWidth[column.name],\n                    }}\n                    placeholder={i18n.t(\"quick_search\")}\n                    permittedValues={column.search.permittedValues}\n                    loadCssThirdParty={loadCssThirdParty}\n                    onChange={(event) => {\n                      const searchValue =\n                        typeof event.target.value === \"object\"\n                          ? event.target.value.key\n                          : event.target.value;\n\n                      columnSearch({\n                        columnName: column.name,\n                        searchValue,\n                        searchValueDisplayAs:\n                          typeof event.target.value === \"object\"\n                            ? event.target.value.displayAs\n                            : \"\",\n                      });\n                      if (\n                        requireForceSearchOnChange(\n                          column.search.dataType,\n                          searchValue\n                        ) === true\n                      ) {\n                        forceSearch();\n                      }\n                    }}\n                    onKeyUp={(event) => {\n                      if (event.key === \"Enter\") {\n                        forceSearch();\n                      }\n                    }}\n                    value={\n                      columnSearchValues[column.name]\n                        ? columnSearchValues[column.name]\n                        : \"\"\n                    }\n                    displayAs={\n                      columnSearchValuesDisplayAs[column.name]\n                        ? columnSearchValuesDisplayAs[column.name]\n                        : \"\"\n                    }\n                    fieldName={column.name}\n                  />\n                )}\n              </td>\n            );\n          })}\n          {hasActions && rightSideActions && visibleColumns.length > 0 && (\n            <ActionsTd />\n          )}\n        </tr>\n      )}\n    </thead>\n  );\n};\n\nDatagridHeader.propTypes = {\n  actionButtonsMultiple: PropTypes.array,\n  columnSearchValues: PropTypes.object,\n  columnSearchValuesDisplayAs: PropTypes.object,\n  configurationSettings: PropTypes.object,\n  extendedSearchData: PropTypes.array,\n  hasActions: PropTypes.bool,\n  options: PropTypes.object,\n  selectedIds: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridHeader;\n","const bodySkin = {\n  title: {\n    composes: \"gc-caption-title\",\n    background: \"var(--gc-dark-background)\",\n    color: \"var(--gc-dark-background-text-color)\",\n    width: \"100%\",\n    padding: \"5px 10px\",\n    \"text-align\": \"left\",\n  },\n};\n\nexport default bodySkin;\n","import { createUseStyles } from \"react-jss\";\nimport titleSkin from \"../skin/datagrid/title.skin\";\n\nconst useStyles = createUseStyles(titleSkin);\n\nconst DatagridTitle = (props) => {\n  const { title } = props;\n\n  const classes = useStyles(props);\n\n  return <div className={classes[\"title\"]}>{title ? title : <>&nbsp;</>}</div>;\n};\n\nexport default DatagridTitle;\n","const toolsSkin = {\n  \"datagrid-tools\": {\n    position: \"relative\",\n    padding: \"10px 10px 5px 10px\",\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n  },\n  \"datagrid-tools-mobile\": {\n    \"flex-direction\": \"column\",\n  },\n  \"simple-button\": {\n    composes: \"btn btn-outline-dark\",\n    \"margin-left\": \"5px\",\n    \"margin-bottom\": \"5px\",\n  },\n  \"success-button\": {\n    composes: \"btn btn-success\",\n    \"margin-left\": \"5px\",\n    \"margin-bottom\": \"5px\",\n  },\n  \"danger-button\": {\n    composes: \"btn btn-danger\",\n    \"margin-left\": \"5px\",\n    \"margin-bottom\": \"5px\",\n  },\n  \"warning-button\": {\n    composes: \"btn btn-warning\",\n    \"margin-left\": \"5px\",\n    \"margin-bottom\": \"5px\",\n  },\n};\n\nexport default toolsSkin;\n","const buttonDropdown = {\n  \"dropdown-menu\": {\n    composes: \"dropdown-menu\",\n  },\n  \"dropdown-menu-opened\": {\n    \".dropdown-menu&\": {\n      display: \"block\",\n    },\n  },\n  \"dropdown-menu-closed\": {\n    \".dropdown-menu&\": {\n      display: \"none\",\n    },\n  },\n  \"dropdown-menu-right\": {\n    \".dropdown-menu&\": {\n      right: \"0\",\n    },\n  },\n  \"dropdown-menu-container\": {\n    composes: \"btn-group\",\n  },\n  \"left-space\": {\n    \"margin-left\": \"5px\",\n  },\n  \"bottom-space\": {\n    \"margin-bottom\": \"5px\",\n  },\n  \"dropdown-menu-button\": {\n    composes: \"btn btn-outline-dark dropdown-toggle\",\n  },\n};\n\nexport default buttonDropdown;\n","import PropTypes from \"prop-types\";\nimport { createUseStyles } from \"react-jss\";\nimport { useState, useRef } from \"react\";\nimport classNames from \"classnames\";\n\nimport buttonDropdown from \"../skin/buttons/button-dropdown.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport { DROPDOWN_DIRECTION } from \"../../../constants/dropdown\";\n\nconst useStyles = createUseStyles(buttonDropdown);\n\nconst ButtonDropdown = ({\n  buttons,\n  buttonIcon,\n  buttonLabel,\n  direction,\n  leftSpace,\n  bottomSpace,\n}) => {\n  const buttonDropdownRef = useRef(null);\n  const [opened, setOpen] = useState(false);\n\n  function openToggle() {\n    setOpen(!opened);\n  }\n\n  function close() {\n    // Having enough time to close in case you press any click into the dropdown\n    setTimeout(() => {\n      setOpen(false);\n    }, 200);\n  }\n\n  const classes = useStyles();\n\n  if (buttons.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      className={classNames({\n        [classes[\"dropdown-menu-container\"]]: true,\n        [classes[\"left-space\"]]: leftSpace,\n        [classes[\"bottom-space\"]]: bottomSpace,\n      })}\n      ref={buttonDropdownRef}\n    >\n      <button\n        className={classes[\"dropdown-menu-button\"]}\n        onClick={openToggle}\n        onBlur={close}\n      >\n        {buttonIcon && (\n          <>\n            <Icon icon={buttonIcon} />\n            &nbsp;\n          </>\n        )}\n        {buttonLabel}&nbsp;\n        <Icon icon=\"caret\" />\n      </button>\n\n      <ul\n        className={classNames({\n          [classes[\"dropdown-menu\"]]: true,\n          [classes[\"dropdown-menu-right\"]]:\n            direction === DROPDOWN_DIRECTION.RIGHT,\n          [classes[\"dropdown-menu-opened\"]]: opened,\n          [classes[\"dropdown-menu-closed\"]]: !opened,\n        })}\n      >\n        {buttons.map((button) => (\n          <li key={button.key}>\n            <a\n              href={button.url ? button.url : \"\"}\n              target={button.newTab ? \"_blank\" : undefined}\n              className=\"dropdown-item\"\n              rel=\"noreferrer\"\n              onClick={\n                button.onClick\n                  ? (event) => {\n                      event.preventDefault();\n                      if (button.onClick) {\n                        button.onClick({\n                          primaryKeyValue: button.primaryKeyValue,\n                        });\n                      }\n                    }\n                  : undefined\n              }\n            >\n              {button.icon && (\n                <>\n                  <Icon icon={button.icon} />\n                  &nbsp;&nbsp;\n                </>\n              )}\n              {button.text}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nButtonDropdown.propTypes = {\n  buttons: PropTypes.array,\n  buttonIcon: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  leftSpace: PropTypes.bool,\n};\n\nButtonDropdown.defaultProps = {\n  buttons: [],\n  buttonIcon: \"\",\n  buttonLabel: \"\",\n  direction: \"left\",\n  leftSpace: false,\n};\n\nexport default ButtonDropdown;\n","import { createUseStyles } from \"react-jss\";\nimport classNames from \"classnames\";\nimport toolsSkin from \"../skin/datagrid/tools.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getFiltersTranslation,\n  getTitleTranslation,\n} from \"../../../utils/translations-helper\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ButtonDropdown from \"../buttons/button-dropdown\";\nimport { DROPDOWN_DIRECTION } from \"../../../constants/dropdown\";\nimport { excelExportUrl, pdfExportUrl, printUrl } from \"../../../utils/urls\";\nimport Button from \"../buttons/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnsActions } from \"../../../actions/columns-actions\";\nimport FatalErrorMessage from \"../../../components/common/error/fatal-error-message\";\nimport MultipleButtons from \"../../../components/datagrid/button/MultipleButtons\";\n\nconst useStyles = createUseStyles(toolsSkin);\n\nconst onColumnsModalOpen = (dispatch) =>\n  dispatch({\n    type: columnsActions.MODAL_OPEN,\n  });\n\nconst DatagridTools = (props) => {\n  const {\n    apiUrl,\n    columnSearchValues,\n    extendedSearchData,\n    hasAdd,\n    onAdd,\n    onClearCache,\n    onClearFiltering,\n    onFilteringModalOpen,\n    onOrderingReset,\n    onRefresh,\n    sorting,\n    sortingFor,\n    urlUniqueHash,\n    visibleColumnsAsShortString,\n    isMobileDevice,\n  } = props;\n\n  const classes = useStyles(props);\n  const dispatch = useDispatch();\n\n  const urlHistory = useSelector((state) => state.configuration.urlHistory);\n  const subject = useSelector((state) => state.configuration.subject);\n  const landingPageUrl = useSelector(\n    (state) => state.configuration.landingPageUrl\n  );\n\n  const hasSettings = useSelector((state) => state.configuration.hasSettings);\n  const hasPrint = useSelector((state) => state.configuration.hasPrint);\n  const hasFilters = useSelector((state) => state.configuration.hasFilters);\n  const hasColumnsButton = useSelector(\n    (state) => state.configuration.hasColumnsButton\n  );\n  const hasExportData = useSelector(\n    (state) => state.configuration.hasExportData\n  );\n  const hasExportPdf = useSelector((state) => state.configuration.hasExportPdf);\n  const hasExportExcel = useSelector(\n    (state) => state.configuration.hasExportExcel\n  );\n\n  const hasTopLeftButtons = useSelector(\n    (state) => state.configuration.hasTopLeftButtons\n  );\n  const hasTopRightButtons = useSelector(\n    (state) => state.configuration.hasTopRightButtons\n  );\n\n  const datagridButtonsTopLeft = useSelector(\n    (state) => state.configuration.datagridButtonsTopLeft\n  );\n\n  const datagridButtonsTopRight = useSelector(\n    (state) => state.configuration.datagridButtonsTopRight\n  );\n\n  const hasTopButtons = hasTopLeftButtons || hasTopRightButtons;\n  // TODO: To pass the urlUniqueHash at the future\n  const uniqueHashPrefix = urlUniqueHash ? `/${urlUniqueHash}` : \"\";\n\n  const dataForExport = {\n    apiUrl,\n    columnSearchValues,\n    sorting,\n    sortingFor,\n    visibleColumnsAsShortString,\n    extendedSearchData,\n  };\n\n  try {\n    return hasTopButtons ? (\n      <div\n        className={classNames({\n          [classes[\"datagrid-tools\"]]: true,\n          [classes[\"datagrid-tools-mobile\"]]: isMobileDevice,\n        })}\n      >\n        <div>\n          {hasTopLeftButtons && (\n            <>\n              {hasAdd && (\n                <Button\n                  link={true}\n                  bottomSpace={true}\n                  href={\n                    urlHistory ? `${landingPageUrl}${uniqueHashPrefix}/add` : \"\"\n                  }\n                  icon=\"plus\"\n                  label={getTitleTranslation(formActions.ADD, subject)}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    onAdd();\n                  }}\n                />\n              )}\n            </>\n          )}\n          <MultipleButtons\n            Button={Button}\n            buttons={datagridButtonsTopLeft}\n            bottomSpace={true}\n          />\n        </div>\n        <div>\n          {hasTopRightButtons && (\n            <>\n              <MultipleButtons\n                Button={Button}\n                buttons={datagridButtonsTopRight}\n                bottomSpace={true}\n              />\n              {hasFilters && (\n                <button\n                  className={\n                    extendedSearchData.length > 0\n                      ? classes[\"success-button\"]\n                      : classes[\"simple-button\"]\n                  }\n                  onClick={onFilteringModalOpen}\n                >\n                  <Icon icon=\"filter\"></Icon>&nbsp;\n                  {getFiltersTranslation(extendedSearchData.length)}\n                </button>\n              )}\n              {hasFilters &&\n                (extendedSearchData.length > 0 ||\n                  Object.keys(columnSearchValues).length > 0) && (\n                  <button\n                    className={classes[\"warning-button\"]}\n                    onClick={onClearFiltering}\n                  >\n                    <Icon icon=\"eraser\"></Icon>&nbsp;\n                    {i18n.t(\"filtering_remove_filters\")}\n                  </button>\n                )}\n              {hasColumnsButton && (\n                <Button\n                  onClick={() => onColumnsModalOpen(dispatch)}\n                  label={i18n.t(\"columns\")}\n                  icon=\"list-alt\"\n                  bottomSpace={true}\n                />\n              )}\n              {hasPrint && (\n                <Button\n                  link={true}\n                  newTab={true}\n                  href={printUrl(dataForExport)}\n                  icon=\"print\"\n                  label={i18n.t(\"print\")}\n                  bottomSpace={true}\n                />\n              )}\n              {hasExportData && (\n                <ButtonDropdown\n                  buttons={[\n                    hasExportExcel && {\n                      icon: \"file-excel\",\n                      text: \"Excel\",\n                      url: excelExportUrl(dataForExport),\n                      newTab: true,\n                      key: \"excel\",\n                    },\n                    hasExportPdf && {\n                      icon: \"file-pdf\",\n                      text: \"PDF\",\n                      url: pdfExportUrl(dataForExport),\n                      newTab: true,\n                      key: \"pdf\",\n                    },\n                  ]}\n                  buttonLabel={i18n.t(\"export_to_file\")}\n                  buttonIcon=\"download\"\n                  leftSpace={true}\n                  bottomSpace={true}\n                />\n              )}\n              {hasSettings && (\n                <ButtonDropdown\n                  leftSpace={true}\n                  bottomSpace={true}\n                  direction={DROPDOWN_DIRECTION.RIGHT}\n                  buttons={[\n                    {\n                      icon: \"broom\",\n                      text: i18n.t(\"clear_cache\"),\n                      onClick: onClearCache,\n                      key: \"clear_cache\",\n                    },\n                    {\n                      icon: \"eraser\",\n                      text: i18n.t(\"clear_filtering\"),\n                      onClick: onClearFiltering,\n                      key: \"clear_filtering\",\n                    },\n                    {\n                      icon: \"unlink\",\n                      text: i18n.t(\"reset_ordering\"),\n                      onClick: onOrderingReset,\n                      key: \"reset_ordering\",\n                    },\n                    {\n                      icon: \"sync-alt\",\n                      text: i18n.t(\"refresh\"),\n                      onClick: onRefresh,\n                      key: \"refresh\",\n                    },\n                  ]}\n                  buttonLabel={i18n.t(\"settings\")}\n                  buttonIcon=\"cog\"\n                />\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    ) : null;\n  } catch (error) {\n    console.log(error);\n    return <FatalErrorMessage />;\n  }\n};\n\nexport default DatagridTools;\n","const wrapperSkin = {\n  \"wrapper-with-hover\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"wrapper-no-hover\": {\n    composes: \"table table-bordered\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"wrapper-full-width\": {\n    width: \"100%\",\n  },\n  \"wrapper-auto-width\": {\n    width: \"auto\",\n  },\n};\n\nexport default wrapperSkin;\n","import { createUseStyles } from \"react-jss\";\nimport wrapperSkin from \"../skin/datagrid/wrapper.skin\";\nimport { useSelector } from \"react-redux\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\nimport classNames from \"classnames\";\n\nconst useStyles = createUseStyles(wrapperSkin);\nconst selectOpenedRows = (state) => state.masterDetail.openedRows;\n\nconst DatagridWrapper = ({ children }) => {\n  const columnWidth = useSelector(selectColumnWidth);\n  const openedRows = useSelector(selectOpenedRows);\n  const classes = useStyles();\n\n  const hasOpenedRows = openedRows.length > 0;\n  const hasColumnsWithCustomWidth = Object.keys(columnWidth).length > 0;\n\n  return (\n    <table\n      className={classNames({\n        [classes[\"wrapper-no-hover\"]]: hasOpenedRows,\n        [classes[\"wrapper-with-hover\"]]: !hasOpenedRows,\n        [classes[\"wrapper-auto-width\"]]: hasColumnsWithCustomWidth,\n        [classes[\"wrapper-full-width\"]]: !hasColumnsWithCustomWidth,\n      })}\n    >\n      {children}\n    </table>\n  );\n};\n\nexport default DatagridWrapper;\n","import i18n from \"../../../../utils/locale/i18n\";\nimport dialogSkin from \"../common/dialog.skin\";\n\nconst formDialog = {\n  \"@keyframes shine\": {\n    to: {\n      \"background-position\": \"100% 0\",\n    },\n  },\n  ...dialogSkin,\n  \"form-fields\": {\n    padding: \"0px 10px\",\n  },\n  \"form-fields-dialog\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n  \"@media (max-height: 300px)\": {\n    \"form-fields\": {\n      \"max-height\": \"none\",\n    },\n  },\n  \"skeleton-loader\": {\n    width: \"100%\",\n    height: \"15px\",\n    border: \"1px solid rgb(239,239,239)\",\n    \"border-radius\": \"4px\",\n    display: \"block\",\n    \"background-repeat\": \"repeat-y\",\n    \"background-size\": \"50px 500px\",\n    \"background-position\": \"0 0\",\n    background:\n      \"linear-gradient(to right, rgba(239, 239, 239, 0), rgba(239, 239, 239, 0.5) 50%, rgba(239, 239, 239, 0) 80%),rgb(255,255,255)\",\n    animation: \"$shine 2s infinite\",\n    \"animation-delay\": \"0.3s\",\n  },\n  \"form-input-read-only\": {\n    padding: \"7px 0px\",\n    border: \"none\",\n    \"background-color\": \"var(--gc-input-light-background)\",\n    \"&:focus-visible, &:focus\": {\n      border: \"none\",\n      outline: \"none\",\n      \"background-color\": \"var(--gc-input-light-background)\",\n    },\n  },\n  \"form-input\": {\n    composes: \"form-control\",\n  },\n  \"form-textarea\": {\n    composes: \"form-control\",\n    \"textarea&\": {\n      \"min-height\": \"250px\",\n    },\n  },\n  \"form-select\": {\n    composes: \"form-control form-select\",\n  },\n  \"form-checkbox\": {\n    composes: \"form-check-input\",\n    cursor: \"pointer\",\n    height: \"1.5rem !important\",\n    width: \"2.75rem !important\",\n    borderRadius: \"3rem !important\",\n    backgroundColor: \"var(--gc-unchecked-background-color)\",\n    \"&:checked\": {\n      backgroundColor: \"var(--gc-selected-background-color)\",\n    },\n  },\n  form: {\n    composes: \"form-horizontal\",\n    position: \"relative\",\n  },\n  \"form-loading\": {\n    \"&:before\": {\n      display: \"block\",\n      content: `\"${i18n.t(\"loading\")}\"`,\n      opacity: \"0.5\",\n      \"font-size\": \"26px\",\n      position: \"absolute\",\n      \"text-align\": \"center\",\n      \"z-index\": \"9999\",\n      color: \"var(--gc-light-background-text-color)\",\n      background: \"var(--gc-light-background)\",\n      cursor: \"default\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n  \"full-page-title\": {\n    background: \"var(--gc-dark-background)\",\n    color: \"var(--gc-dark-background-text-color)\",\n    width: \"100%\",\n    padding: \"5px 10px\",\n    \"text-align\": \"left\",\n  },\n};\n\nexport default formDialog;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { FIELD_TYPES } from \"../../../constants/field-types\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(miniGridSkin);\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridMiniGrid = ({ visibleColumns, rows }) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  return (\n    <div className={classes[\"scrolling-wrapper\"]}>\n      <table className={classes[\"mini-grid\"]}>\n        <thead>\n          <tr>\n            {visibleColumns.map((column) =>\n              column.dataType === FIELD_TYPES.INVISIBLE ? null : (\n                <th key={column.name}>{column.displayAs}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes[\"mini-grid-body\"]}>\n          {rows.map((rowData, numRow) => (\n            <tr key={numRow}>\n              {visibleColumns.map((column) =>\n                column.dataType === FIELD_TYPES.INVISIBLE ? null : (\n                  <td key={column.name}>\n                    <div className={classes[\"column-text\"]}>\n                      {formatDatagridValue(\n                        rowData[column.name],\n                        column.dataType,\n                        {\n                          dateFormat,\n                          fieldName: column.name,\n                          fieldOptions: column.options,\n                          locale,\n                          permittedValues: column.permittedValues,\n                          primaryKeyValue:\n                            rowData.grocery_crud_extras.primaryKeyValue,\n                        }\n                      )}\n                    </div>\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDatagridMiniGrid.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridMiniGrid;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { getDeleteConfirmationMessage } from \"../../../utils/translations-helper\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\nimport classNames from \"classnames\";\nimport DialogHeader from \"../common/dialog-header\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteMultipleModal = (props) => {\n  const {\n    deleteMultipleModalOpen,\n    deleteMultipleModalClose,\n    deleteMultiple,\n    selectedIds,\n    visibleColumnsWithDetails,\n    rows,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classNames({\n        [classes[\"dialog\"]]: true,\n        [classes[\"dialog-open\"]]: deleteMultipleModalOpen,\n        [classes[\"dialog-closed\"]]: !deleteMultipleModalOpen,\n      })}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <DialogHeader\n            title={i18n.t(\"action_delete\")}\n            onClose={deleteMultipleModalClose}\n          />\n          <div className=\"modal-body\">\n            <p>{getDeleteConfirmationMessage(selectedIds.length)}</p>\n            {deleteMultipleModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter((row) =>\n                  selectedIds.includes(row.grocery_crud_extras.primaryKeyValue)\n                )}\n              />\n            )}\n          </div>\n          {deleteMultipleModalOpen && (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default btn-outline-dark\"\n                data-dismiss=\"modal\"\n                onClick={deleteMultipleModalClose}\n              >\n                {i18n.t(\"cancel\")}\n              </button>\n              {/* making sure that we have at least one selection to remove */}\n              {selectedIds.length > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger delete-single-confirmation-button\"\n                  onClick={deleteMultiple}\n                >\n                  {i18n.t(\"action_delete\")}\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteMultipleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteMultipleModal;\n","import classNames from \"classnames\";\nimport { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\nimport DialogHeader from \"../common/dialog-header\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteSingleModal = (props) => {\n  const {\n    deleteOneModalOpen,\n    deleteOneModalClose,\n    deleteOne,\n    visibleColumnsWithDetails,\n    primaryKeyValue,\n    rows,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classNames({\n        [classes[\"dialog\"]]: true,\n        [classes[\"dialog-open\"]]: deleteOneModalOpen,\n        [classes[\"dialog-closed\"]]: !deleteOneModalOpen,\n      })}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <DialogHeader\n            title={i18n.t(\"action_delete\")}\n            onClose={deleteOneModalClose}\n          />\n          <div className=\"modal-body\">\n            <p>{i18n.t(\"confirm_delete\")}</p>\n            {deleteOneModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter(\n                  (row) =>\n                    row.grocery_crud_extras.primaryKeyValue === primaryKeyValue\n                )}\n              />\n            )}\n          </div>\n          {deleteOneModalOpen && (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default btn-outline-dark\"\n                data-dismiss=\"modal\"\n                onClick={deleteOneModalClose}\n              >\n                {i18n.t(\"cancel\")}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger delete-single-confirmation-button\"\n                onClick={deleteOne}\n              >\n                {i18n.t(\"action_delete\")}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteSingleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteSingleModal;\n","import dialogSkin from \"../common/dialog.skin\";\n\nconst errorDialog = {\n  \"error-dialog\": {\n    composes: \"modal\",\n    \".modal&\": {\n      \"z-index\": \"1100\", // more than 1050 that is the default of bootstrap modal\n    },\n  },\n  ...dialogSkin,\n  \"error-details\": {\n    width: \"100%\",\n    height: \"200px\",\n  },\n};\n\nexport default errorDialog;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport errorDialog from \"../skin/error-dialog/error-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport classNames from \"classnames\";\n\nconst useStyles = createUseStyles(errorDialog);\n\nconst ErrorDialog = ({\n  closeModal,\n  showError,\n  details,\n  message,\n  validationError,\n  failureError,\n  errorsList,\n}) => {\n  const classes = useStyles();\n\n  const serverError = !failureError && !validationError;\n\n  return (\n    <div\n      className={classNames({\n        [classes[\"error-dialog\"]]: true,\n        [classes[\"dialog-open\"]]: showError,\n        [classes[\"dialog-closed\"]]: !showError,\n      })}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"error_generic_title\")}</h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={closeModal}\n            />\n          </div>\n          <div className=\"modal-body\">\n            {validationError && (\n              <ul>\n                {Object.values(errorsList).map((error, index) => (\n                  <li key={index}>{error}</li>\n                ))}\n              </ul>\n            )}\n            {failureError && <div>{message}</div>}\n            {serverError && (\n              <>\n                <div>\n                  {i18n.t(\"error_message\")}: {message}\n                </div>\n                <div>{i18n.t(\"error_text\")}:</div>\n                <div>\n                  <textarea\n                    defaultValue={details || \"\"}\n                    className={classes[\"error-details\"]}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              data-dismiss=\"modal\"\n              onClick={closeModal}\n            >\n              {i18n.t(\"close_modal\")}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nErrorDialog.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nErrorDialog.defaultProps = {\n  formFields: [],\n};\n\nexport default ErrorDialog;\n","import dialogSkin from \"../common/dialog.skin\";\n\nconst filteringDialogSkin = {\n  ...dialogSkin,\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n};\n\nexport default filteringDialogSkin;\n","const filteringSkin = {\n  \"filtering-row\": {\n    composes: \"row\",\n    \"padding-top\": \"10px\",\n    \"padding-bottom\": \"10px\",\n  },\n  \"filtering-column\": {\n    // hardcoding the color here since we have an issue with third party components that inherits the color from the parent\n    color: \"#212529\",\n  },\n  \"form-input\": {\n    composes: \"form-control\",\n  },\n  \"form-select\": {\n    composes: \"form-control\",\n  },\n  \"form-color\": {\n    composes: \"form-control form-control-color\",\n  },\n};\n\nexport default filteringSkin;\n","import { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { createUseStyles } from \"react-jss\";\n\nimport i18n from \"../../../utils/locale/i18n\";\nimport classNames from \"classnames\";\n\nimport filteringSkin from \"../skin/filtering/filtering.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport { deepCloneArray } from \"../../../utils/array-helper\";\nimport {\n  doTriggerFilterRefresh,\n  doTriggerFilterValueRefresh,\n  emptyFilterMapping,\n  getFilterValueFromDataType,\n} from \"../../../utils/filtering-helper\";\nimport FilterComparisonSelect from \"../../../components/filtering/filter-comparison-select\";\nimport {\n  getJssNameFromType,\n  getSearchInputComponent,\n} from \"../../../utils/field-types\";\nimport { FIELD_TYPES } from \"../../../constants/field-types\";\nimport DialogHeader from \"../common/dialog-header\";\n\nconst useStyles = createUseStyles(filteringSkin);\n\nconst Filtering = (props) => {\n  const {\n    onFilteringModalClose,\n    columns,\n    onSubmit: onSubmitCallback,\n    extendedSearchOperator,\n    extendedSearchData,\n    loadCssThirdParty,\n  } = props;\n\n  const { control, handleSubmit, getValues } = useForm({\n    defaultValues: {\n      basic_operator: extendedSearchOperator || \"AND\",\n      extended_search:\n        extendedSearchData.length > 0\n          ? extendedSearchData\n          : [\n              {\n                name: columns[0].name,\n                filter: \"contains\",\n                value: \"\",\n              },\n            ],\n    },\n  });\n  const { fields, append, remove, insert } = useFieldArray({\n    control,\n    name: \"extended_search\",\n  });\n\n  const classes = useStyles(props);\n\n  const onSubmit = (data) => {\n    if (onSubmitCallback) {\n      // making sure that we are not sending any data by reference\n      let extendedSearch = [];\n      data[\"extended_search\"].forEach((searchData) => {\n        extendedSearch.push(searchData);\n      });\n      onSubmitCallback(\n        deepCloneArray({\n          ...data,\n          extended_search: extendedSearch,\n        })\n      );\n    }\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const numberOfFields = fields.length;\n\n  return (\n    <form\n      className=\"form-horizontal\"\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <DialogHeader\n        onClose={onFilteringModalClose}\n        title={i18n.t(\"filtering_filter_text\")}\n      />\n      <div className=\"modal-body\">\n        <div className=\"row\">\n          <label className=\"col-md-3 control-label\">\n            {i18n.t(\"filtering_operator\")} :\n          </label>\n          <div className=\"col-md-3\">\n            <Controller\n              render={({ field: { onChange, value } }) => (\n                <select\n                  name=\"basic_operator\"\n                  onChange={onChange}\n                  className=\"form-control form-select\"\n                  defaultValue={value}\n                >\n                  <option value=\"AND\">\n                    {i18n.t(\"filtering_and_statement\")}\n                  </option>\n                  <option value=\"OR\">{i18n.t(\"filtering_or_statement\")}</option>\n                </select>\n              )}\n              name=\"basic_operator\"\n              control={control}\n              defaultValue=\"AND\"\n            />\n          </div>\n        </div>\n        <div>\n          {fields.map((item, index) => {\n            const columnName = getValues(`extended_search[${index}]`).name;\n\n            const column = columns.find((column) => column.name === columnName);\n\n            return (\n              <div className={classes[\"filtering-row\"]} key={item.id}>\n                <div className=\"col-md-1\">\n                  <button\n                    className=\"btn btn-outline-dark btn-block\"\n                    type=\"button\"\n                    onClick={() => remove(index)}\n                    disabled={numberOfFields === 1}\n                  >\n                    <Icon icon=\"trash\" />\n                  </button>\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-3\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({ field: { onChange, value } }) => {\n                      const name = `extended_search[${index}].name`;\n                      const options = columns\n                        .filter(\n                          (column) =>\n                            column.isSearchable &&\n                            column.dataType !== FIELD_TYPES.INVISIBLE\n                        )\n                        .map((column) => ({\n                          value: column.name,\n                          label: column.displayAs,\n                        }));\n                      return (\n                        <Select\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.value;\n\n                            const oldColumn = columns.find(\n                              (column) => column.name === oldValues.name\n                            );\n                            const newColumn = columns.find(\n                              (column) => column.name === newValue\n                            );\n\n                            if (\n                              doTriggerFilterRefresh(\n                                oldColumn.dataType,\n                                newColumn.dataType\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: newValue,\n                                filter: getFilterValueFromDataType(\n                                  newColumn.dataType\n                                ),\n                                value: \"\",\n                              });\n                            }\n\n                            onChange({ target: { name, value: event.value } });\n                          }}\n                          name={name}\n                          value={options.filter(\n                            (option) => option.value === value\n                          )}\n                          options={options}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].name`}\n                    control={control}\n                    defaultValue={item.firstName} // make sure to set up defaultValue\n                  />\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-3\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({ field: { onChange, value } }) => {\n                      return (\n                        <FilterComparisonSelect\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.target.value;\n                            if (\n                              doTriggerFilterValueRefresh(\n                                oldValues.filter,\n                                newValue\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: oldValues.name,\n                                filter: newValue,\n                                // null is an indication to not show an input\n                                value: emptyFilterMapping[newValue] ? null : \"\",\n                              });\n                            }\n\n                            onChange(event);\n                          }}\n                          className=\"form-control form-select\"\n                          name={`extended_search[${index}].filter`}\n                          value={value}\n                          dataType={column.dataType}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].filter`}\n                    control={control}\n                    defaultValue={item.filter}\n                  />\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-5\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({\n                      field: { onChange, onBlur, value: originalValue },\n                    }) => {\n                      // null is an indication that we will not show an input\n                      if (originalValue === null) {\n                        return null;\n                      }\n\n                      const { dataType, permittedValues } = column;\n\n                      const displayAs =\n                        typeof originalValue === \"object\"\n                          ? originalValue.displayAs\n                          : \"\";\n                      const value =\n                        typeof originalValue === \"object\"\n                          ? originalValue.key\n                          : originalValue;\n\n                      const SearchInputComponent =\n                        getSearchInputComponent(dataType);\n\n                      return (\n                        <SearchInputComponent\n                          onChange={onChange}\n                          onBlur={onBlur}\n                          className={classes[getJssNameFromType(dataType)]}\n                          name={`extended_search[${index}].value`}\n                          value={value}\n                          required={true}\n                          permittedValues={permittedValues}\n                          fieldName={column.name}\n                          displayAs={displayAs}\n                          loadCssThirdParty={loadCssThirdParty}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].value`}\n                    control={control}\n                    defaultValue={item.value}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className={classes[\"filtering-row\"]}>\n          <div className=\"col-md-12\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              onClick={() => {\n                append({\n                  name: columns[0].name,\n                  filter: \"contains\",\n                  value: \"\",\n                });\n              }}\n            >\n              <Icon icon=\"plus\" />\n              &nbsp;\n              {i18n.t(\"filtering_add_more\")}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"modal-footer\">\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={onFilteringModalClose}\n        >\n          {i18n.t(\"filtering_cancel\")}\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-success delete-multiple-confirmation-button\"\n        >\n          {i18n.t(\"filtering_filter_text\")}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Filtering;\n","import { createUseStyles } from \"react-jss\";\nimport filteringDialogSkin from \"../skin/filtering/filtering-dialog.skin\";\nimport Filtering from \"./filtering\";\nimport classNames from \"classnames\";\n\nconst useStyles = createUseStyles(filteringDialogSkin);\n\nconst FilteringModal = (props) => {\n  const { filteringModalOpen, onFilteringSubmit, columns } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div\n      className={classNames({\n        [classes[\"dialog\"]]: true,\n        [classes[\"dialog-open\"]]: filteringModalOpen,\n        [classes[\"dialog-closed\"]]: !filteringModalOpen,\n      })}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\">\n        <div className=\"modal-content\">\n          {filteringModalOpen && (\n            <Filtering\n              {...props}\n              columns={columns}\n              onSubmit={onFilteringSubmit}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilteringModal;\n","import { useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { formSubmitTransformation } from \"../../../utils/form-fields\";\nimport InputContainer from \"../../../components/common/input-container\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport {\n  EVENT_SET_FIELD_VALUE,\n  subscribeEvent,\n  unsubscribeEvent,\n} from \"../../../utils/events\";\nimport classNames from \"classnames\";\n\nconst selectCloseModalOnSave = (state) => state.form.closeModalOnSave;\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Form = ({\n  configurationSettings,\n  formFields,\n  formIsReadOnly: readOnly,\n  formLoadingOverlay,\n  formModalClose,\n  formState,\n  loadCssThirdParty,\n  modalLoading,\n  onFormSubmit,\n  publishEvents,\n}) => {\n  const closeModalOnSave = useSelector(selectCloseModalOnSave);\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  const dispatch = useDispatch();\n  const { handleSubmit, control, register, setValue } = useForm();\n\n  useEffect(() => {\n    const handleCustomEvent = ({ detail }) => {\n      setValue(detail.fieldName, detail.fieldValue);\n    };\n\n    if (publishEvents) {\n      subscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n    }\n\n    // Clean up event listener on component unmount\n    return () => {\n      if (publishEvents) {\n        unsubscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n      }\n    };\n  }, [setValue, publishEvents]);\n\n  const onSubmit = (data) => {\n    const transformedData = formSubmitTransformation(data, formFields);\n\n    onFormSubmit({\n      formState,\n      data: transformedData,\n    });\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const classes = useStyles();\n\n  return (\n    <form\n      className={classNames({\n        [classes[\"form\"]]: true,\n        [classes[\"form-loading\"]]: formLoadingOverlay,\n      })}\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div\n        className={classNames({\n          [classes[\"form-fields\"]]: true,\n          [classes[\"form-fields-dialog\"]]: openInModal,\n        })}\n      >\n        {modalLoading\n          ? \"Loading...\"\n          : formFields.map((field) => {\n              return (\n                <InputContainer\n                  control={control}\n                  field={field}\n                  inputContainerClassName=\"col-sm-9\"\n                  jssClasses={classes}\n                  key={field.fieldName}\n                  labelClassName=\"col-sm-3 col-form-label\"\n                  labelContainerClassName=\"mb-3 row\"\n                  loadCssThirdParty={loadCssThirdParty}\n                  readOnly={readOnly}\n                  register={register}\n                  setValue={setValue}\n                  configurationSettings={configurationSettings}\n                  formState={formState}\n                />\n              );\n            })}\n      </div>\n      <div className=\"modal-footer\">\n        {!readOnly && (\n          <>\n            <label className=\"options-on-save\">\n              <input\n                type=\"checkbox\"\n                checked={closeModalOnSave}\n                onChange={() =>\n                  dispatch({\n                    type: formActions.TOGGLE_CLOSE_MODAL_ON_SAVE,\n                  })\n                }\n              />{\" \"}\n              {i18n.t(\"close_modal_on_save\")}\n            </label>{\" \"}\n            &nbsp; &nbsp;\n          </>\n        )}\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={formModalClose}\n        >\n          {i18n.t(\"close_modal\")}\n        </button>\n        {!readOnly && (\n          <button type=\"submit\" className=\"btn btn-primary\">\n            {i18n.t(\"modal_save\")}\n          </button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  configurationSettings: PropTypes.object,\n};\n\nForm.defaultProps = {\n  configurationSettings: {},\n};\n\nexport default Form;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\nimport { useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\nimport DialogHeader from \"../common/dialog-header\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Modal = (props) => {\n  const { formModalLoading, formModalClose, formState, formModalOpen } = props;\n\n  const classes = useStyles();\n  const subject = useSelector((state) => state.configuration.subject);\n\n  return (\n    <div\n      className={classNames(classes[\"dialog\"], {\n        [classes[\"dialog-open\"]]: formModalOpen,\n        [classes[\"dialog-closed\"]]: !formModalOpen,\n      })}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <DialogHeader\n            onClose={formModalClose}\n            title={getTitleTranslation(formState, subject)}\n          />\n          {formModalOpen && (\n            <div className=\"modal-body\">\n              {formModalLoading ? (\n                <div className={classes[\"skeleton-loader\"]} />\n              ) : (\n                <Form {...props} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  openInModal: PropTypes.bool,\n};\n\nModal.defaultProps = {\n  formFields: [],\n  openInModal: true,\n};\n\nexport default Modal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst FullPage = (props) => {\n  const { formModalLoading, formState, formModalOpen } = props;\n\n  const classes = useStyles(props);\n  const subject = useSelector((state) => state.configuration.subject);\n\n  return (\n    <div className={classes[\"full-page\"]} tabIndex=\"-1\">\n      <div className={classes[\"full-page-title\"]}>\n        {getTitleTranslation(formState, subject)}\n      </div>\n      <div>\n        {formModalOpen && (\n          <div className=\"modal-body\">\n            {formModalLoading ? (\n              <div className={classes[\"skeleton-loader\"]} />\n            ) : (\n              <Form {...props} />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nFullPage.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  openInModal: PropTypes.bool,\n};\n\nFullPage.defaultProps = {\n  formFields: [],\n  openInModal: true,\n};\n\nexport default FullPage;\n","import Modal from \"./modal\";\nimport FullPage from \"./full-page\";\nimport { useSelector } from \"react-redux\";\n\nconst FormDialog = ({ ...props }) => {\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  return openInModal ? <Modal {...props} /> : <FullPage {...props} />;\n};\n\nexport default FormDialog;\n","import { createUseStyles } from \"react-jss\";\n\nimport groupButtonSkin from \"../skin/buttons/buttons.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport ButtonDropdown from \"./button-dropdown\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = createUseStyles(groupButtonSkin);\n\nconst GroupButtons = (props) => {\n  const { buttons, maxActionButtons, isMobileDevice } = props;\n  const classes = useStyles(props);\n\n  const maxButtons = isMobileDevice\n    ? maxActionButtons.mobile\n    : maxActionButtons.desktop;\n\n  const areWeGroupingButtons = buttons.length > maxButtons;\n\n  return (\n    <>\n      {buttons\n        // The logic here is that when we need to group buttons then we don't want to have the edge case situation\n        // when the grouping button is the last one button. In that case if we keep it as is (e.g. maxButtons -1)\n        // then we will have a More button that will lead to only one button which is undesirable.\n        .filter((__button, key) =>\n          areWeGroupingButtons ? key < maxButtons - 1 : key < maxButtons\n        )\n        .map((button) => (\n          <a\n            href={button.url ? button.url : \"\"}\n            className={classes[\"simple-button\"]}\n            key={button.key}\n            title={button.label}\n            target={button.newTab ? \"_blank\" : undefined}\n            rel=\"noreferrer\"\n            onClick={\n              button.onClick\n                ? (event) => {\n                    event.preventDefault();\n                    if (button.onClick) {\n                      button.onClick({\n                        primaryKeyValue: button.primaryKeyValue,\n                      });\n                    }\n                  }\n                : undefined\n            }\n          >\n            {button.icon && (\n              <>\n                <Icon icon={button.icon} />\n              </>\n            )}\n            {button.text && (\n              <>\n                &nbsp;\n                {button.text}\n              </>\n            )}\n          </a>\n        ))}\n      <ButtonDropdown\n        buttons={\n          areWeGroupingButtons\n            ? buttons.filter((__button, key) => key >= maxButtons - 1)\n            : []\n        }\n        buttonLabel={maxButtons === 1 ? i18n.t(\"actions\") : i18n.t(\"more\")}\n        leftSpace={true}\n      />\n    </>\n  );\n};\n\nGroupButtons.propTypes = {\n  buttons: PropTypes.array,\n  maxActionButtons: PropTypes.shape({\n    mobile: PropTypes.number,\n    desktop: PropTypes.number,\n  }),\n};\n\nGroupButtons.defaultProps = {\n  buttons: [],\n  maxActionButtons: {\n    mobile: 1,\n    desktop: 2,\n  },\n};\n\nexport default GroupButtons;\n","import ColumnsModal from \"./columns/columns-modal\";\nimport DatagridBody from \"./datagrid/datagrid-body\";\nimport DatagridCheckbox from \"./datagrid/datagrid-checkbox\";\nimport DatagridFooter from \"./datagrid/datagrid-footer\";\nimport DatagridHeader from \"./datagrid/datagrid-header\";\nimport DatagridTitle from \"./datagrid/datagrid-title\";\nimport DatagridTools from \"./datagrid/datagrid-tools\";\nimport DatagridWrapper from \"./datagrid/datagrid-wrapper\";\nimport DeleteMultipleModal from \"./delete-multiple/delete-multiple-modal\";\nimport DeleteSingleModal from \"./delete-single/delete-single-modal\";\nimport ErrorDialog from \"./error/error-dialog\";\nimport FilteringModal from \"./filtering/filtering-modal\";\nimport FormDialog from \"./form/form-dialog\";\nimport GroupButtons from \"./buttons/group-buttons\";\n\nconst themeComponents = {\n  ColumnsModal,\n  DatagridBody,\n  DatagridCheckbox,\n  DatagridFooter,\n  DatagridHeader,\n  DatagridTitle,\n  DatagridTools,\n  DatagridWrapper,\n  DeleteMultipleModal,\n  DeleteSingleModal,\n  ErrorDialog,\n  FilteringModal,\n  FormDialog,\n  GroupButtons,\n};\n\nexport default themeComponents;\n","import { columnWidthActions } from \"../actions/column-width-actions\";\n\nlet previousSiblingElement;\nlet parentThElement;\nlet startOffsetX;\nlet startClientX;\nlet columnWidth;\nexport const COLUMN_MIN_WIDTH = 60;\nconst COLUMN_EXTRA_PADDING = 13;\n\nexport const columnWidthOnDragStart = (event) => {\n  const currentTarget = event.currentTarget;\n\n  currentTarget.closest(\"th\").style.background = \"var(--gc-dark-background)\";\n  currentTarget.style.opacity = \"0\";\n\n  previousSiblingElement = event.currentTarget.previousSibling;\n  parentThElement = event.currentTarget.closest(\"th\");\n\n  previousSiblingElement.style.background =\n    \"var(--gc-emphasis-background-color)\";\n  previousSiblingElement.style.right = \"0\";\n  previousSiblingElement.style.position = \"fixed\";\n  previousSiblingElement.style.left =\n    event.clientX - COLUMN_EXTRA_PADDING + \"px\";\n  previousSiblingElement.style.display = \"block\";\n\n  startClientX = event.clientX;\n  columnWidth = parentThElement.clientWidth;\n  startOffsetX = parentThElement.offsetLeft + columnWidth;\n};\n\nexport const columnWidthOnDrag = (event) => {\n  if (previousSiblingElement !== null) {\n    previousSiblingElement.style.left =\n      startOffsetX + event.clientX - startClientX + \"px\";\n  }\n};\n\nexport const columnChangeWidthAction = (columnName, columnWidth, dispatch) => {\n  dispatch({\n    type: columnWidthActions.CHANGE_WIDTH,\n    columnName,\n    columnWidth,\n  });\n};\n\nexport const columnWidthOnDragEnd = (event, columnName, dispatch) => {\n  if (parentThElement !== null) {\n    parentThElement.style.removeProperty(\"background\");\n    columnChangeWidthAction(\n      columnName,\n      Math.max(\n        columnWidth + event.clientX - startClientX - COLUMN_EXTRA_PADDING,\n        COLUMN_MIN_WIDTH\n      ),\n      dispatch\n    );\n  }\n  event.currentTarget.style.removeProperty(\"right\");\n  event.currentTarget.style.removeProperty(\"background\");\n  event.currentTarget.style.removeProperty(\"position\");\n  event.currentTarget.style.removeProperty(\"left\");\n  event.currentTarget.style.removeProperty(\"opacity\");\n\n  previousSiblingElement.style.removeProperty(\"right\");\n  previousSiblingElement.style.removeProperty(\"background\");\n  previousSiblingElement.style.removeProperty(\"position\");\n  previousSiblingElement.style.removeProperty(\"left\");\n  previousSiblingElement.style.removeProperty(\"opacity\");\n\n  document.body.style.removeProperty(\"cursor\");\n};\n"],"names":["useColumnSearchListener","columnSearch","forceSearch","publishEvents","useEffect","handleCustomEvent","_ref","detail","columnName","searchValue","subscribeEvent","EVENT_SET_QUICK_SEARCH_VALUE","unsubscribeEvent","selectColumnWidth","state","columnWidth","opacity","dialog","composes","display","animation","cursor","_objectSpread","dialogSkin","tabs","orderingBox","position","padding","background","color","border","description","selectOrderedColumns","datagrid","orderedColumns","useStyles","createUseStyles","columnsOrderingSkin","columns","visibleColumns","changeOrdering","resetColumnsOrdering","classes","useSelector","_jsxs","_Fragment","children","className","_jsx","i18n","t","type","onClick","DragDropContext","onDragEnd","_ref2","source","destination","draggableId","index","Droppable","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","map","find","column","name","columnIndex","Draggable","draggableProps","dragHandleProps","includes","displayAs","placeholder","selectColumnsAllOrNone","toggleVisibleColumn","onChange","checked","length","filter","c","dataType","FIELD_TYPES","INVISIBLE","widthChanging","right","height","width","overflow","COLUMN_MIN_WIDTH","miniGridSkin","dispatch","useDispatch","hasColumnsWithCustomWidth","Object","keys","columnWidthActions","RESET_COLUMN_WIDTH","classNames","numRow","style","draggable","onDragStart","columnWidthOnDragStart","onDrag","columnWidthOnDrag","event","columnWidthOnDragEnd","columnWidthValue","replace","htmlFor","concat","value","id","columnChangeWidthAction","target","title","onClose","columnsModalSkin","TAB_VISIBILITY","TAB_ORDERING","TAB_WIDTH","columnsModalOpen","onColumnsModalClose","visibleColumnsWithDetails","tabSelected","setTabSelection","useState","tabIndex","role","DialogHeader","active","ColumnsVisibility","ColumnsOrdering","DatagridColumnWidth","selectLocalCode","configuration","locale","selectDateFormat","dateFormat","selectHasMasterDetail","hasMasterDetail","selectOpenedRows","masterDetail","openedRows","bodySkin","DatagridRow","lastPrimaryKeyValue","rowData","hasActions","settings","configurationSettings","onRowUpdate","onRowUnmount","actionButtonsMultiple","rightSideActions","skin","theme","rest","_objectWithoutProperties","_excluded","grocery_crud_extras","primaryKeyValue","useLayoutEffect","ActionsTd","ActionsColumn","backendActionButtons","actionButtons","isRowOpened","rowId","undefined","masterDetailActions","CLOSE_ROW","OPEN_ROW","Icon","icon","formatDatagridValue","fieldName","fieldOptions","options","permittedValues","colSpan","MasterDetail","defaultProps","selectRows","datagridRows","selectRightSideActions","props","rows","checkbox","checkboxSkin","footer","alignItems","justifyContent","paddingRight","pagination","margin","borderRadius","borderLeft","borderRight","buttonsSkin","label","link","href","newTab","bottomSpace","rel","footerSkin","filteredTotalEntries","goToFirstPage","goToLastPage","goToNextPage","goToPreviousPage","initError","isMobileDevice","lastPage","onClearAllCache","page","currentPage","pageChange","pagingOptions","perPage","perPageChange","totalEntries","hasBottomLeftButtons","hasBottomRightButtons","datagridButtonsBottomLeft","datagridButtonsBottomRight","hasBottomButtons","footerChildClasses","i18nShow","i18nEntries","smartSeparation","pageOption","DatagridPagingItemsLabel","disabled","onFocus","select","onKeyUp","key","MultipleButtons","Button","buttons","headerSkin","backendActionButtonsMultiple","columnOrdering","columnSearchValues","columnSearchValuesDisplayAs","extendedSearchData","loadCssThirdParty","onMultipleDeleteModalOpen","onSelectRowAllOrNone","actionButtonHasText","hasActionButtonsMultiple","deleteMultiple","selectRowsAllOrNoneChecked","selectedIds","sorting","sortingFor","hasQuickSearch","isAnyColumnSearchable","some","isSearchable","hasFrontendActionButtonsMultiple","hasMultipleActions","hasSecondaryHeader","DatagridCheckbox","button","getMultipleActionUrl","iconName","hasOrdering","InputSearchComponent","getSearchInputComponent","search","getClassNamesByDataType","searchValueDisplayAs","requireForceSearchOnChange","titleSkin","buttonDropdown","ButtonDropdown","buttonIcon","buttonLabel","direction","leftSpace","buttonDropdownRef","useRef","opened","setOpen","onBlur","setTimeout","DROPDOWN_DIRECTION","RIGHT","url","preventDefault","text","toolsSkin","apiUrl","hasAdd","onAdd","onClearCache","onClearFiltering","onFilteringModalOpen","onOrderingReset","onRefresh","urlUniqueHash","visibleColumnsAsShortString","urlHistory","subject","landingPageUrl","hasSettings","hasPrint","hasFilters","hasColumnsButton","hasExportData","hasExportPdf","hasExportExcel","hasTopLeftButtons","hasTopRightButtons","datagridButtonsTopLeft","datagridButtonsTopRight","hasTopButtons","uniqueHashPrefix","dataForExport","getTitleTranslation","formActions","ADD","getFiltersTranslation","columnsActions","MODAL_OPEN","onColumnsModalOpen","printUrl","excelExportUrl","pdfExportUrl","error","console","log","FatalErrorMessage","wrapperSkin","hasOpenedRows","to","outline","backgroundColor","form","content","formDialog","deleteMultipleModalOpen","deleteMultipleModalClose","getDeleteConfirmationMessage","DatagridMiniGrid","row","deleteOneModalOpen","deleteOneModalClose","deleteOne","errorDialog","ErrorDialog","closeModal","showError","details","message","validationError","failureError","errorsList","serverError","values","defaultValue","formFields","filteringSkin","onFilteringModalClose","onSubmit","onSubmitCallback","extendedSearchOperator","control","handleSubmit","getValues","useForm","defaultValues","basic_operator","extended_search","fields","append","remove","insert","useFieldArray","numberOfFields","data","extendedSearch","forEach","searchData","push","deepCloneArray","onError","errors","e","Controller","render","field","item","Select","oldValues","newValue","oldColumn","newColumn","doTriggerFilterRefresh","getFilterValueFromDataType","option","firstName","_ref3","FilterComparisonSelect","doTriggerFilterValueRefresh","emptyFilterMapping","_ref4","originalValue","SearchInputComponent","getJssNameFromType","required","filteringDialogSkin","filteringModalOpen","onFilteringSubmit","Filtering","selectCloseModalOnSave","closeModalOnSave","Form","formIsReadOnly","readOnly","formLoadingOverlay","formModalClose","formState","modalLoading","onFormSubmit","openInModal","register","setValue","fieldValue","EVENT_SET_FIELD_VALUE","transformedData","formSubmitTransformation","InputContainer","inputContainerClassName","jssClasses","labelClassName","labelContainerClassName","TOGGLE_CLOSE_MODAL_ON_SAVE","Modal","formModalLoading","formModalOpen","FullPage","assign","_objectDestructuringEmpty","groupButtonSkin","GroupButtons","maxActionButtons","maxButtons","mobile","desktop","areWeGroupingButtons","__button","ColumnsModal","DatagridBody","DatagridFooter","DatagridHeader","DatagridTitle","DatagridTools","DatagridWrapper","DeleteMultipleModal","DeleteSingleModal","FilteringModal","FormDialog","previousSiblingElement","parentThElement","startOffsetX","startClientX","currentTarget","closest","previousSibling","left","clientX","clientWidth","offsetLeft","CHANGE_WIDTH","removeProperty","Math","max","document","body"],"sourceRoot":""}